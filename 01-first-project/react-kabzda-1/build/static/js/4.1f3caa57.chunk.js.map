{"version":3,"sources":["components/LoginPage/Login.module.css","components/LoginPage/LoginForm.jsx","components/LoginPage/Login.jsx"],"names":["module","exports","LoginForm","props","onSubmit","handleSubmit","className","classes","form","createTextField","textField","InputFieldCreator","required","error","btn","reduxForm","connect","state","isAuth","getIsAuthSelector","login","to","title","values","email","password","rememberMe"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,UAAY,yBAAyB,MAAQ,qBAAqB,IAAM,qB,+GCO9IC,EAAY,SAACC,GAGb,OACE,oCACE,0BACEC,SAAUD,EAAME,aAChBC,UAAWC,IAAQC,MASlBC,YAAgBF,IAAQG,UAAW,QAASC,IAAmB,QAAS,SAAU,CAACC,MACnFH,YAAgBF,IAAQG,UAAW,WAAYC,IAAmB,WAAY,uCAAU,CAACC,MAC1F,6BACCH,YAAgB,GAAI,aAAc,QAAS,WAAY,KAAM,IAC7D,kHAEAN,EAAMU,MACL,yBAAKP,UAAWC,IAAQM,OACrBV,EAAMU,OAGT,KAEF,4BAAQP,UAAWC,IAAQO,KAA3B,6DAYKZ,EAJfA,EAAYa,YAAU,CACpBP,KAAM,aADIO,CAETb,G,+BCVYc,uBAPO,SAACC,GACrB,MAAO,CACLC,OAAQC,YAAkBF,MAKU,CAAEG,WAA3BJ,EA7BD,SAACb,GAUb,OAAIA,EAAMe,OACG,kBAAC,IAAD,CAAUG,GAAI,aAGlB,yBAAKf,UAAaC,IAAQa,OAC/B,wBAAId,UAAaC,IAAQe,OAAzB,uHACA,kBAAC,EAAD,CAAWlB,SAbA,SAAAmB,GACb,IAAIC,EAAQD,EAAOC,MACjBC,EAAWF,EAAOE,SAClBC,EAAaH,EAAOG,WACtBvB,EAAMiB,MAAMI,EAAOC,EAAUC","file":"static/js/4.1f3caa57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__3ZK_4\",\"form\":\"Login_form__2bYhq\",\"textField\":\"Login_textField__3mtFN\",\"error\":\"Login_error__2-oAH\",\"btn\":\"Login_btn__3u_OC\"};","import React from 'react';\nimport classes from './Login.module.css';\nimport {reduxForm} from 'redux-form';\nimport {InputFieldCreator} from \"../common/BlockContainer\";\nimport {required} from \"../common/validators\";\nimport {createTextField} from \"../common/helpFunctions\";\n\n\nlet LoginForm = (props) => {\n\n\n    return (\n      <>\n        <form\n          onSubmit={props.handleSubmit}\n          className={classes.form}\n          >\n          {/* <Field\n            className={classes.textField}\n            name=\"name\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Имя\"\n          /> */}\n          {createTextField(classes.textField, \"email\", InputFieldCreator, \"input\", \"E-mail\", [required])}\n          {createTextField(classes.textField, \"password\", InputFieldCreator, \"password\", \"Пароль\", [required])}\n          <div>\n          {createTextField('', \"rememberMe\", 'input', \"checkbox\", null, [])}\n           <span>Запомнить меня</span>\n          </div>\n          {props.error ?\n            <div className={classes.error}>\n              {props.error}\n            </div>\n            :\n            null\n          }\n          <button className={classes.btn}>\n            Отправить\n          </button>\n        </form>\n      </>\n    );\n}\n\nLoginForm = reduxForm({\n  form: 'LoginForm'\n})(LoginForm);\n\nexport default LoginForm;","import React from 'react';\r\nimport classes from './Login.module.css';\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { login} from './../../redux/authReduser';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {getIsAuthSelector} from \"../../redux/authSelectors\";\r\n\r\nconst Login = (props) => {\r\n\r\n\r\n  let onSubmit = values => {\r\n    let email = values.email,\r\n      password = values.password,\r\n      rememberMe = values.rememberMe;\r\n    props.login(email, password, rememberMe);\r\n\r\n  };\r\n  if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}></Redirect>\r\n  }\r\n  else {\r\n    return <div className = {classes.login}>\r\n      <h1 className = {classes.title}>Страница авторизации</h1>\r\n      <LoginForm onSubmit={onSubmit} />\r\n    </div>\r\n  }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: getIsAuthSelector(state)\r\n  }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n"],"sourceRoot":""}