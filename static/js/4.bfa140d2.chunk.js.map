{"version":3,"sources":["components/UsersPage/UsersContainer/Users/Users.module.css","components/UsersPage/UsersContainer/Users/User/User.module.css","components/UsersPage/UsersContainer/Users/Search/Search.module.css","components/common/Paginator/Paginator.module.css","components/UsersPage/UsersContainer/Users/User/User.jsx","components/UsersPage/UsersContainer/Users/Search/Search.jsx","components/common/Paginator/Pagination.jsx","components/UsersPage/UsersContainer/Users/Users.jsx","../node_modules/reselect/es/index.js","redux/usersSelectors.js","components/UsersPage/UsersContainer/UsersContainer.tsx"],"names":["module","exports","User","props","useEffect","frends","some","frend","id","toFriends","className","classes","user_wrapper","left_column","to","isAuth","img","src","smallPhotoSrc","urlAIGeneratedImage","avatar","alt","followed","disabled","followInProgress","onClick","unFollow","btn","follow","isFrend","deletedFrend","filter","deleteFromFrends","fromFriends","newFrends","length","localStorage","setItem","JSON","stringify","console","log","every","addToFrends","right_column","row","fullName","status","Search","onChange","e","text","target","value","searchUsers","getUsers","currentPage","usersPerPageCount","type","searchUsersText","placeholder","search_wrapper","Pagination","pages","j","i","push","page_pagination","setFirstPage","page_navigation","setPreviosPage","previos_page","map","p","Math","ceil","totalUsersCount","changeActivePage","page","active","key","setNextPage","next_page","lastPage","input","changeUserPerPageCount","Users","frendID","users","user","toLastPage","users_wrapper","name","photos","small","toggleFollowInProgress","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","getDependencies","funcs","dependencies","Array","isArray","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getSearchUsersTextSelector","state","usersPage","getSearchingUsersSelector","toLowerCase","includes","getCurrentPageSelector","getUsersPerPageCountSelector","getTotalUsersCountSelector","getIsLoadingSelector","isLoading","getFollowInProgressSelector","UsersContainer","numOfUsers","changeUsersPerPage","pagesCount","changeCurrentPage","firstPage","previosPage","nextPage","this","Preloader","React","Component","compose","connect","getIsAuthSelector","getUrlAIGeneratedImageSelector","getFrendsSelector"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,gBAAkB,+BAA+B,SAAW,wBAAwB,KAAO,oBAAoB,UAAY,yBAAyB,aAAe,4BAA4B,OAAS,sBAAsB,MAAQ,uB,oBCAzSD,EAAOC,QAAU,CAAC,aAAe,2BAA2B,YAAc,0BAA0B,IAAM,kBAAkB,IAAM,kBAAkB,aAAe,2BAA2B,IAAM,oB,oBCApMD,EAAOC,QAAU,CAAC,eAAiB,iC,oBCAnCD,EAAOC,QAAU,CAAC,gBAAkB,mCAAmC,gBAAkB,mCAAmC,SAAW,4BAA4B,KAAO,wBAAwB,UAAY,6BAA6B,aAAe,gCAAgC,OAAS,0BAA0B,MAAQ,2B,yLC+EtTC,EA5EF,SAACC,GAGZC,qBAAU,WACJD,EAAME,OAAOC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOL,EAAMK,OAChDL,EAAMM,UAAUN,EAAMK,MAEvB,IA2BD,OACI,yBAAKE,UAAaC,IAAQC,cACtB,yBAAKF,UAAWC,IAAQE,aACtB,kBAAC,IAAD,CAASC,GAAIX,EAAMY,OAAS,YAAcZ,EAAMK,GAAK,UACrD,yBACIE,UAAWC,IAAQK,IACvBC,IAA4B,MAAvBd,EAAMe,cAAwBf,EAAMe,cAAgBf,EAAMgB,oBAAsBhB,EAAMgB,oBAAsBC,IAC7GC,IAAK,YAGJlB,EAAMmB,SACX,4BAAQC,SAAUpB,EAAMqB,iBAAiBlB,MAAK,SAAAE,GAAE,OAAIA,IAAOL,EAAMK,MAAKiB,QAAW,WAAOtB,EAAMuB,SAASvB,EAAMK,KACxGE,UAAaC,IAAQgB,KAD1B,kEAGA,4BAAQJ,SAAUpB,EAAMqB,iBAAiBlB,MAAK,SAAAE,GAAE,OAAIA,IAAOL,EAAMK,MAAKiB,QAAW,WAAOtB,EAAMyB,OAAOzB,EAAMK,KAAME,UAAWC,IAAQgB,KAApI,sEAGMxB,EAAM0B,QACZ,4BAAQJ,QAjCK,WACvB,GAAItB,EAAME,OAAOC,MAAK,SAAAC,GAAK,OAAIA,EAAMC,KAAOL,EAAMK,MAAI,CACpD,IAAIsB,EAAe3B,EAAME,OAAO0B,QAAO,SAAAxB,GAAK,OAAIA,EAAMC,KAAOL,EAAMK,MACnEL,EAAM6B,iBAAiBF,EAAa,IACpC3B,EAAM8B,YAAY9B,EAAMK,IACxB,IAAI0B,EAAY/B,EAAME,OAAO0B,QAAO,SAAAxB,GAAK,OAAIA,EAAMC,KAAOL,EAAMK,MACxC,IAAxBL,EAAME,OAAO8B,OAEbC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUL,IAE9CE,aAAaC,QAAQ,SAAUC,KAAKC,UAAU,UACvCC,QAAQC,IAAI,4DAsBwB/B,UAAWC,IAAQgB,KAAtD,2FACA,4BAAQF,QAzCA,WACdtB,EAAME,OAAOqC,OAAM,SAAAnC,GAAK,OAAIA,EAAMC,KAAOL,EAAMK,OACjDL,EAAMM,UAAUN,EAAMK,IACtBL,EAAMwC,YAAYxC,EAAMK,KAEpBgC,QAAQC,IAAI,yEAoCsB/B,UAAWC,IAAQgB,KAAjD,kGAIF,yBAAKjB,UAAWC,IAAQiC,cACpB,yBAAKlC,UAAWC,IAAQkC,KACpB,kBAAC,IAAD,CAAS/B,GAAIX,EAAMY,OAAQ,YAAcZ,EAAMK,GAAK,UACpD,4BAAKL,EAAM2C,WAEX,gHAEJ,yBAAKpC,UAAWC,IAAQkC,KACpB,2BAAI1C,EAAM4C,QACV,6G,kBC/CLC,EApBA,SAAA7C,GAOb,OACE,6BACE,2BACE8C,SATY,SAAAC,GAChB,IAAIC,EAAOD,EAAEE,OAAOC,MACpBlD,EAAMmD,YAAYH,GAClBhD,EAAMoD,SAASpD,EAAMqD,YAAarD,EAAMsD,kBAAmBN,IAOvDO,KAAK,OACLL,MAAOlD,EAAMwD,gBACbC,YAAY,sEACZlD,UAAWC,IAAQkD,mB,kBC4BZC,EA1CI,SAAC3D,GAGhB,IAFA,IAAI4D,EAAQ,GACRC,EAAI7D,EAAMqD,YACLS,EAAI9D,EAAMqD,YAAaS,EAAID,EAAI,EAAGC,IACvCF,EAAMG,KAAKD,GAEf,OACQ,yBAAKvD,UAAWC,IAAQwD,iBACpB,0BAAM1C,QAAStB,EAAMiE,aAAc1D,UAAWC,IAAQ0D,iBAAtD,yFACA,0BAAM5C,QAAStB,EAAMmE,eAAgB5D,UAAWC,IAAQ4D,cAAxD,QAEIR,EAAMS,KAAI,SAAAC,GACN,OAAKC,KAAKC,KAAKxE,EAAMyE,gBAAkBzE,EAAMsD,mBAAqBgB,GAAM,EAC7D,0BACHhD,QAAS,WACLtB,EAAM0E,iBAAiBJ,IAE3B/D,UAAWP,EAAMqD,cAAgBiB,EAAtB,UACF9D,IAAQmE,KADN,YACcnE,IAAQoE,QADtB,UAEFpE,IAAQmE,MACjBE,IAAKP,GAAIA,GACD,QAGxB,0BAAMhD,QAAStB,EAAM8E,YAAavE,UAAWC,IAAQuE,WAArD,QACA,0BACIzD,QAAStB,EAAMgF,SACfzE,UAAS,UAAKC,IAAQ0D,gBAAb,YAAgC1D,IAAQwE,WAFrD,2GAGA,8KAEI,2BACIzE,UAAWC,IAAQyE,MACnB1B,KAAK,SACLL,MAAOlD,EAAMsD,kBACbR,SAAU9C,EAAMkF,4BCoDzBC,EAnFD,SAACnF,GAGX,IAFA,IAAI4D,EAAQ,GACRC,EAAI7D,EAAMqD,YACLS,EAAI9D,EAAMqD,YAAaS,EAAID,EAAI,EAAGC,IACvCF,EAAMG,KAAKD,GAGjB,IAAMtB,EAAc,SAAC4C,GACnB,IAAIhF,EAAQJ,EAAMqF,MAAMzD,QAAO,SAAA0D,GAAI,OAAIA,EAAKjF,KAAO+E,KACnDpF,EAAMwC,YAAYpC,IAGlB,OACI,6BACI,yBAAKG,UAAWC,IAAQkD,gBAC1B,kBAAC,EAAD,CAAQN,SAAUpD,EAAMoD,SAAUD,YAAanD,EAAMmD,YAAaE,YAChErD,EAAMqD,YACNC,kBACAtD,EAAMsD,qBAGN,kBAAC,EAAD,CACED,YACCrD,EAAMqD,YAEPY,aACEjE,EAAMiE,aAERE,eACEnE,EAAMmE,eAERW,YACE9E,EAAM8E,YAERE,SACEhF,EAAMuF,WAERd,gBACEzE,EAAMyE,gBAERnB,kBACEtD,EAAMsD,kBAER4B,uBACElF,EAAMkF,uBAERR,iBACE1E,EAAM0E,mBAGV,yBAAKnE,UAAWC,IAAQgF,eACnBxF,EAAMqF,MAAM,IACTrF,EAAMqF,MACDhB,KAAI,SAAAiB,GACG,OAAO,kBAAC,EAAD,CACHT,IAAKS,EAAKjF,GACVA,GAAIiF,EAAKjF,GACTsC,SAAU2C,EAAKG,KACftE,SAAUmE,EAAKnE,SACfJ,cAAeuE,EAAKI,OAAOC,MAC3B/C,OAAQ0C,EAAK1C,OACblB,QAAS4D,EAAK5D,QACdd,OAAUZ,EAAMY,OAChBa,OAAQzB,EAAMyB,OACdF,SAAUvB,EAAMuB,SAChBjB,UAAWN,EAAMM,UACjBwB,YAAa9B,EAAM8B,YACrBU,YAAaA,EACbX,iBAAkB7B,EAAM6B,iBACxB+D,uBAAwB5F,EAAM4F,uBAC9BvE,iBAAoBrB,EAAMqB,iBAC1BL,oBAAuBhB,EAAMgB,oBAC7Bd,OAAQF,EAAME,e,uBC9EhD,SAAS2F,EAAqBC,EAAGC,GAC/B,OAAOD,IAAMC,EAGf,SAASC,EAA2BC,EAAeC,EAAMC,GACvD,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKlE,SAAWmE,EAAKnE,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASkE,EAAKlE,OAET8B,EAAI,EAAGA,EAAI9B,EAAQ8B,IAC1B,IAAKmC,EAAcC,EAAKpC,GAAIqC,EAAKrC,IAC/B,OAAO,EAIX,OAAO,EAmBT,SAASsC,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAa/D,OAAM,SAAUkE,GAChC,MAAsB,oBAARA,KACZ,CACF,IAAIC,EAAkBJ,EAAajC,KAAI,SAAUoC,GAC/C,cAAcA,KACbE,KAAK,MACR,MAAM,IAAIC,MAAM,wGAAgHF,EAAkB,KAGpJ,OAAOJ,EAgDF,IAAIO,EA7CJ,SAA+BC,GACpC,IAAK,IAAIC,EAAOC,UAAUhF,OAAQiF,EAAiBV,MAAMQ,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IACxGD,EAAeC,EAAO,GAAKF,UAAUE,GAGvC,OAAO,WACL,IAAK,IAAIC,EAAQH,UAAUhF,OAAQqE,EAAQE,MAAMY,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACjFf,EAAMe,GAASJ,UAAUI,GAG3B,IAAIC,EAAiB,EACjBC,EAAajB,EAAMkB,MACnBjB,EAAeF,EAAgBC,GAC/BmB,EAAqBV,EAAQW,WAAMC,EAAW,CAAC,WAGjD,OAFAL,IAEOC,EAAWG,MAAM,KAAMT,aAC7BW,OAAOV,IAENW,EAAWd,GAAQ,WAIrB,IAHA,IAAIe,EAAS,GACT7F,EAASsE,EAAatE,OAEjB8B,EAAI,EAAGA,EAAI9B,EAAQ8B,IAE1B+D,EAAO9D,KAAKuC,EAAaxC,GAAG2D,MAAM,KAAMT,YAI1C,OAAOQ,EAAmBC,MAAM,KAAMI,MAaxC,OAXAD,EAASN,WAAaA,EACtBM,EAAStB,aAAeA,EAExBsB,EAASP,eAAiB,WACxB,OAAOA,GAGTO,EAASE,oBAAsB,WAC7B,OAAOT,EAAiB,GAGnBO,GAGiBG,EA5ErB,SAAwBC,GAC7B,IAAI/B,EAAgBe,UAAUhF,OAAS,QAAsB0F,IAAjBV,UAAU,GAAmBA,UAAU,GAAKnB,EACpFoC,EAAW,KACXC,EAAa,KAEjB,OAAO,WAOL,OANKlC,EAA2BC,EAAegC,EAAUjB,aAEvDkB,EAAaF,EAAKP,MAAM,KAAMT,YAGhCiB,EAAWjB,UACJkB,MC/BJ,IAIMC,EAA6B,SAACC,GACzC,OAAOA,EAAMC,UAAU7E,iBAIZ8E,EAA4BzB,EAAesB,GATxB,SAACC,GAC/B,OAAOA,EAAMC,UAAUhD,SAQ6E,SAAC7B,EAAiB6B,GAEtH,OADoBA,EAAQA,EAAMzD,QAAQ,SAAA0D,GAAI,MAAK,UAAGA,EAAKG,MAAO8C,cAAcC,SAAShF,EAAgB+E,kBAAmB,QAMjHE,EAAyB,SAACL,GACrC,OAAOA,EAAMC,UAAUhF,aAGZqF,EAA+B,SAACN,GAC3C,OAAOA,EAAMC,UAAU/E,mBAGZqF,EAA6B,SAACP,GACzC,OAAOA,EAAMC,UAAU5D,iBAGZmE,EAAuB,SAACR,GACnC,OAAOA,EAAMC,UAAUQ,WAGZC,EAA8B,SAACV,GAC1C,OAAOA,EAAMC,UAAUhH,kB,iBCoCnB0H,E,2MAQN7D,uBAAyB,SAACnC,GACtB,IAAIiG,GAAcjG,EAAEE,OAAOC,MAC1B8F,EAAa,MAASA,EAAa,KACpC,EACKhJ,MACAiJ,mBAAmBD,GACxB,EACKhJ,MACAoD,SAAS,EAAKpD,MAAMqD,YAAa2F,EAAY,K,EAGtDzD,WAAa,WACT,IAAI2D,EAAa3E,KAAKC,KAClB,EAAKxE,MAAMyE,gBAAkB,EAAKzE,MAAMsD,mBAE5C,EACKtD,MACAgF,SAASkE,GACd,EACKlJ,MACAmJ,kBAAkBD,GACvB,EACKlJ,MACAoD,SAAS8F,EAAY,EAAKlJ,MAAMsD,kBAAmB,K,EAG5DW,aAAe,WACX,EACKjE,MACAoJ,YACL,EACKpJ,MACAoD,SAAS,EAAG,EAAKpD,MAAMsD,kBAAmB,K,EAGnDa,eAAiB,WACT,EAAKnE,MAAMqD,YAAc,IACzB,EACKrD,MACAqJ,cACL,EACKrJ,MACAoD,SAAS,EAAKpD,MAAMqD,YAAc,EAAG,EAAKrD,MAAMsD,kBAAmB,M,EAIhFwB,YAAc,WACV,IAAIoE,EAAa3E,KAAKC,KAClB,EAAKxE,MAAMyE,gBAAkB,EAAKzE,MAAMsD,mBAExC,EAAKtD,MAAMqD,YAAc6F,IACzB,EACKlJ,MACAsJ,WACL,EACKtJ,MACAoD,SAAS,EAAKpD,MAAMqD,YAAc,EAAG,EAAKrD,MAAMsD,kBAAmB,M,EAIhFoB,iBAAmB,SAACJ,GAChB,EACKtE,MACAmJ,kBAAkB7E,GACvB,EACKtE,MACAoD,SAASkB,EAAG,EAAKtE,MAAMsD,kBAAmB,K,mFAvE/CiG,KACKvJ,MACAoD,SAASmG,KAAKvJ,MAAMqD,YAAakG,KAAKvJ,MAAMsD,kBAAmB,M,+BA0EhE,OAAO,wCACHiG,KAAKvJ,MAAM6I,UACL,kBAACW,EAAA,EAAD,MACA,KAEV,kBAAC,EAAD,eACAvF,aACIsF,KAAKtF,aAETE,eACIoF,KAAKpF,eAETW,YACIyE,KAAKzE,YAELS,WACEgE,KAAKhE,WAEXL,uBACIqE,KAAKrE,uBAETR,iBACI6E,KAAK7E,kBAED6E,KAAKvJ,a,GAvGQyJ,IAAMC,WA8HpBC,sBACZC,aAjBmB,SAACxB,GACvB,MAAO,CACH/C,MAAOiD,EAA0BF,GACjC5E,gBAAiB2E,EAA2BC,GAC5C/E,YAAaoF,EAAuBL,GACpC9E,kBAAmBoF,EAA6BN,GAChD3D,gBAAiBkE,EAA2BP,GAC5CS,UAAWD,EAAqBR,GAChC/G,iBAAkByH,EAA4BV,GAC9CxH,OAAQiJ,YAAkBzB,GAC1BpH,oBAAqB8I,YAA+B1B,GACpDlI,OAAQ6J,YAAkB3B,MAM6G,CACvI9H,cACAkC,gBACAV,gBACAD,qBACAsB,gBACAgG,sBACAG,aACAD,gBACAD,cACApE,aACAiE,uBACArD,2BACAxC,aACA7B,aACAE,aAhBWkI,CAkBbZ","file":"static/js/4.bfa140d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_pagination\":\"Users_page_pagination__3IwZV\",\"page_navigation\":\"Users_page_navigation__1pmDK\",\"lastPage\":\"Users_lastPage__25KYf\",\"page\":\"Users_page__2FYGx\",\"next_page\":\"Users_next_page__MTInT\",\"previos_page\":\"Users_previos_page__30jrr\",\"active\":\"Users_active__3fqMs\",\"input\":\"Users_input__ld6x6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_wrapper\":\"User_user_wrapper__3QGs8\",\"left_column\":\"User_left_column__QudzM\",\"btn\":\"User_btn__3DNNw\",\"img\":\"User_img__3NZYd\",\"right_column\":\"User_right_column__1M6Tk\",\"row\":\"User_row__kM7_6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_wrapper\":\"Search_search_wrapper__3rVv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_pagination\":\"Paginator_page_pagination__3PTVu\",\"page_navigation\":\"Paginator_page_navigation__1PTT7\",\"lastPage\":\"Paginator_lastPage__2p6Rq\",\"page\":\"Paginator_page__1qIV9\",\"next_page\":\"Paginator_next_page__1X7Bw\",\"previos_page\":\"Paginator_previos_page__XXTox\",\"active\":\"Paginator_active__3N7Z5\",\"input\":\"Paginator_input__15nfs\"};","import React, { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport avatar from './../../../../../../src/img/avatar.png';\nimport classes from './User.module.css';\nconst User = (props) => {\n\n\n  useEffect(() => {\n    if (props.frends.some(frend => frend.id === props.id)) {\n      props.toFriends(props.id);\n    } //change button state for loading from local storage frends\n  }, [])\n  \n\n\n\n  const addToFrends = () => {\n    if (props.frends.every(frend => frend.id !== props.id)){\n      props.toFriends(props.id);\n      props.addToFrends(props.id);\n    }\n    else {console.log('уже в друзьях')}\n  }\n  const deleteFromFrends = () => {\n    if (props.frends.some(frend => frend.id === props.id)){\n      let deletedFrend = props.frends.filter(frend => frend.id === props.id);\n      props.deleteFromFrends(deletedFrend[0]);\n      props.fromFriends(props.id);\n      let newFrends = props.frends.filter(frend => frend.id !== props.id);\n      props.frends.length !== 1 \n      ? \n      localStorage.setItem('frends', JSON.stringify(newFrends))\n      :\n      localStorage.setItem('frends', JSON.stringify(''));\n    } else { console.log('нет такого') }\n  }\n\n\n    return (\n        <div className = {classes.user_wrapper}>\n            <div className={classes.left_column}>\n              <NavLink to={props.isAuth ? '/profile/' + props.id : '/login'}>\n              <img\n                  className={classes.img}\n              src={props.smallPhotoSrc != null ? props.smallPhotoSrc : props.urlAIGeneratedImage ? props.urlAIGeneratedImage : avatar}\n                  alt={\"avatar\"}/>\n              </NavLink>\n               {\n                   props.followed ? \n              <button disabled={props.followInProgress.some(id => id === props.id)} onClick = {() => {props.unFollow(props.id)}}\n                   className = {classes.btn}> Отписаться </button> \n                   : \n              <button disabled={props.followInProgress.some(id => id === props.id)} onClick = {() => {props.follow(props.id)}} className={classes.btn}>Подписаться</button>\n               }\n               {\n                    props.isFrend ?\n              <button onClick={deleteFromFrends} className={classes.btn}>Убрать из друзей </button> :\n              <button onClick={addToFrends} className={classes.btn}>Добавить в друзья </button>\n                }  \n               \n            </div>\n            <div className={classes.right_column}>\n                <div className={classes.row}>\n                    <NavLink to={props.isAuth ?'/profile/' + props.id : '/login'}>\n                    <h4>{props.fullName}</h4>\n                    </NavLink>\n                    <p>Какая то страна</p>\n                </div>\n                <div className={classes.row}>\n                    <p>{props.status}</p>\n                    <p>Какой то город</p>\n                </div>\n            </div>\n\n\n        \n       </div>\n    );\n}\n\nexport default User;","import React from \"react\";\nimport classes from \"./Search.module.css\";\n\nconst Search = props => {\n  let searchUsers = e => {\n    let text = e.target.value;\n    props.searchUsers(text);\n    props.getUsers(props.currentPage, props.usersPerPageCount, text)\n  };\n\n  return (\n    <div>\n      <input\n        onChange={searchUsers}\n        type=\"text\"\n        value={props.searchUsersText}\n        placeholder=\"Поиск друзей\"\n        className={classes.search_wrapper}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport classes from './Paginator.module.css';\n\nconst Pagination = (props) => {\n    let pages = [];\n    let j = props.currentPage;\n    for (let i = props.currentPage; i < j + 5; i++) {\n        pages.push(i);\n    }\n    return (\n            <div className={classes.page_pagination}>\n                <span onClick={props.setFirstPage} className={classes.page_navigation}>Первая страница</span>\n                <span onClick={props.setPreviosPage} className={classes.previos_page}>&laquo;</span>\n                {\n                    pages.map(p => {\n                        if ((Math.ceil(props.totalUsersCount / props.usersPerPageCount) - p) > -1) {\n                            return <span\n                                onClick={() => {\n                                    props.changeActivePage(p)\n                                }}\n                                className={props.currentPage === p\n                                    ? `${classes.page} ${classes.active}`\n                                    : `${classes.page}`}\n                                key={p}>{p}</span>\n                        } else {return  null}\n                    })\n                }\n                <span onClick={props.setNextPage} className={classes.next_page}>&raquo;</span>\n                <span\n                    onClick={props.lastPage}\n                    className={`${classes.page_navigation} ${classes.lastPage}`}>Последняя страница</span>\n                <span>\n                    Пользователей на странице:\n                    <input\n                        className={classes.input}\n                        type=\"number\"\n                        value={props.usersPerPageCount}\n                        onChange={props.changeUserPerPageCount}/>\n\n                </span>\n            </div>\n    )\n\n}\n\nexport default Pagination\n","import React, { useEffect } from 'react';\r\nimport classes from './Users.module.css';\r\nimport User from './User/User';\r\nimport Search from './Search/Search';\r\nimport Pagination from \"../../../common/Paginator/Pagination\";\r\n\r\nconst Users = (props) => {\r\n    let pages = [];\r\n    let j = props.currentPage;\r\n    for (let i = props.currentPage; i < j + 5; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n  const addToFrends = (frendID) => {\r\n    let frend = props.users.filter(user => user.id === frendID);\r\n    props.addToFrends(frend);\r\n  } \r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.search_wrapper}>\r\n          <Search getUsers={props.getUsers} searchUsers={props.searchUsers} currentPage={\r\n            props.currentPage\r\n          } usersPerPageCount={\r\n            props.usersPerPageCount\r\n          }/>\r\n            </div>\r\n            <Pagination\r\n              currentPage = {\r\n               props.currentPage\r\n              }\r\n              setFirstPage = {\r\n                props.setFirstPage\r\n              }\r\n              setPreviosPage = {\r\n                props.setPreviosPage\r\n              }\r\n              setNextPage = {\r\n                props.setNextPage\r\n              }\r\n              lastPage = {\r\n                props.toLastPage\r\n              }\r\n              totalUsersCount = {\r\n                props.totalUsersCount\r\n              }\r\n              usersPerPageCount = {\r\n                props.usersPerPageCount\r\n              }\r\n              changeUserPerPageCount = {\r\n                props.changeUserPerPageCount\r\n              }\r\n              changeActivePage = {\r\n                props.changeActivePage\r\n              }\r\n            />\r\n            <div className={classes.users_wrapper}>\r\n                {props.users[0] && \r\n                    props.users\r\n                        .map(user => {\r\n                                return <User\r\n                                    key={user.id}\r\n                                    id={user.id}\r\n                                    fullName={user.name}\r\n                                    followed={user.followed}\r\n                                    smallPhotoSrc={user.photos.small}\r\n                                    status={user.status}\r\n                                    isFrend={user.isFrend}\r\n                                    isAuth = {props.isAuth}\r\n                                    follow={props.follow}\r\n                                    unFollow={props.unFollow}\r\n                                    toFriends={props.toFriends}\r\n                                    fromFriends={props.fromFriends}\r\n                                  addToFrends={addToFrends}\r\n                                  deleteFromFrends={props.deleteFromFrends}\r\n                                  toggleFollowInProgress={props.toggleFollowInProgress}\r\n                                  followInProgress = {props.followInProgress}\r\n                                  urlAIGeneratedImage = {props.urlAIGeneratedImage}\r\n                                  frends={props.frends}\r\n                                  />\r\n\r\n                        })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Users\r\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from 'reselect';\r\n\r\nexport const getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n}\r\n\r\nexport const getSearchUsersTextSelector = (state) => {\r\n  return state.usersPage.searchUsersText;\r\n}\r\n\r\n//this function dublicates on the server site throuth parametr 'term' on getUsers\r\nexport const getSearchingUsersSelector = createSelector(getSearchUsersTextSelector, getUsersSelector, (searchUsersText, users) => {\r\n  let filteredUsers = users ? users.filter( user => (`${user.name}`.toLowerCase().includes(searchUsersText.toLowerCase()))) : null;\r\n  return filteredUsers;\r\n})\r\n\r\n\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getUsersPerPageCountSelector = (state) => {\r\n  return state.usersPage.usersPerPageCount\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getIsLoadingSelector = (state) => {\r\n  return state.usersPage.isLoading\r\n}\r\n\r\nexport const getFollowInProgressSelector = (state) => {\r\n  return state.usersPage.followInProgress\r\n}\r\n\r\n\r\n","import React, { ChangeEvent } from 'react';\r\nimport {\r\n  changeCurrentPage,\r\n  changeUsersPerPage,\r\n  firstPage,\r\n  follow,\r\n  fromFriends,\r\n  getUsers,\r\n  lastPage,\r\n  nextPage,\r\n  previosPage,\r\n  searchUsers,\r\n  toFriends,\r\n  toggleFollowInProgress,\r\n  unFollow\r\n} from \"../../../redux/userReduser\";\r\nimport { addToFrends, deleteFromFrends} from '../../../redux/navBarReduser';\r\nimport {connect} from 'react-redux';\r\nimport Users from './Users/Users';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport {compose} from 'redux';\r\nimport {getIsAuthSelector} from \"../../../redux/authSelectors\";\r\nimport {\r\n  getCurrentPageSelector,\r\n  getFollowInProgressSelector,\r\n  getIsLoadingSelector,\r\n  getSearchingUsersSelector,\r\n  getSearchUsersTextSelector,\r\n  getTotalUsersCountSelector,\r\n  getUsersPerPageCountSelector\r\n} from \"../../../redux/usersSelectors\";\r\nimport { getUrlAIGeneratedImageSelector } from '../../../redux/profileSelectors';\r\nimport { getFrendsSelector } from '../../../redux/navBarSelectors';\r\nimport { UserType, FrendType } from '../../../types/types';\r\nimport { AppStateType } from '../../../redux/reduxStore';\r\n\r\ntype UsersContainerMapStatePropsType = {\r\nusers: Array<UserType>\r\nsearchUsersText: string\r\ncurrentPage: number\r\nusersPerPageCount: number\r\ntotalUsersCount: number\r\nisLoading: boolean\r\nfollowInProgress: Array <number>\r\nisAuth: boolean\r\nurlAIGeneratedImage: string | null\r\nfrends: Array<FrendType>\r\n}\r\n\r\ntype UsersContainerMapDispatchPropstype = {\r\n  toFriends: (userID: number) => void\r\n     addToFrends: (frends: Array<FrendType>) => void\r\n    fromFriends: (userID: number) => void\r\n     deleteFromFrends: (frend: FrendType) => void\r\n    searchUsers: (partOfName: string) => void\r\n    changeCurrentPage: (pageNum: number) => void\r\n    nextPage: () => void\r\n    previosPage: () => void\r\n    firstPage: () => void\r\n    lastPage: (pagesCount: number) => void\r\n    changeUsersPerPage: (numOfUsers: number) => void\r\n    toggleFollowInProgress: (isFetching: boolean, userID: number) => void\r\n    getUsers: (currentPage: number, usersPerPageCount: number, term: string | undefined) => void\r\n    unFollow: (id: number) => void\r\n    follow: (id: number) => void\r\n}\r\n\r\ntype UsersConteinerOwnPropsType = {\r\n  }\r\ntype UserContainerPropsType = UsersContainerMapStatePropsType & UsersContainerMapDispatchPropstype\r\n\r\nclass UsersContainer extends React.Component<UserContainerPropsType> {\r\n\r\ncomponentDidMount() {\r\n    this\r\n        .props\r\n        .getUsers(this.props.currentPage, this.props.usersPerPageCount, '');\r\n}\r\n\r\nchangeUserPerPageCount = (e : ChangeEvent<HTMLInputElement>) => {\r\n    let numOfUsers = +e.target.value;\r\n    (numOfUsers > 100) && (numOfUsers = 100);\r\n    this\r\n        .props\r\n        .changeUsersPerPage(numOfUsers);\r\n    this\r\n        .props\r\n        .getUsers(this.props.currentPage, numOfUsers, '');\r\n}\r\n\r\ntoLastPage = () => {\r\n    let pagesCount = Math.ceil(\r\n        this.props.totalUsersCount / this.props.usersPerPageCount\r\n    )\r\n    this\r\n        .props\r\n        .lastPage(pagesCount);\r\n    this\r\n        .props\r\n        .changeCurrentPage(pagesCount);\r\n    this\r\n        .props\r\n        .getUsers(pagesCount, this.props.usersPerPageCount, '');\r\n}\r\n\r\nsetFirstPage = () => {\r\n    this\r\n        .props\r\n        .firstPage();\r\n    this\r\n        .props\r\n        .getUsers(1, this.props.usersPerPageCount, '');\r\n}\r\n\r\nsetPreviosPage = () => {\r\n    if (this.props.currentPage > 1) {\r\n        this\r\n            .props\r\n            .previosPage();\r\n        this\r\n            .props\r\n            .getUsers(this.props.currentPage - 1, this.props.usersPerPageCount, '');\r\n    }\r\n}\r\n\r\nsetNextPage = () => {\r\n    let pagesCount = Math.ceil(\r\n        this.props.totalUsersCount / this.props.usersPerPageCount\r\n    )\r\n    if (this.props.currentPage < pagesCount) {\r\n        this\r\n            .props\r\n            .nextPage();\r\n        this\r\n            .props\r\n            .getUsers(this.props.currentPage + 1, this.props.usersPerPageCount, '');\r\n    }\r\n}\r\n\r\nchangeActivePage = (p : number) => {\r\n    this\r\n        .props\r\n        .changeCurrentPage(p);\r\n    this\r\n        .props\r\n        .getUsers(p, this.props.usersPerPageCount, '');\r\n}\r\n\r\n    render() {\r\n\r\n        return <> {\r\n            this.props.isLoading\r\n                ? <Preloader />\r\n                : null\r\n        }\r\n        <Users\r\n        setFirstPage = {\r\n            this.setFirstPage\r\n        }\r\n        setPreviosPage = {\r\n            this.setPreviosPage\r\n        }\r\n        setNextPage = {\r\n            this.setNextPage\r\n        }\r\n            toLastPage = {\r\n              this.toLastPage\r\n        }\r\n        changeUserPerPageCount = {\r\n            this.changeUserPerPageCount\r\n        }\r\n        changeActivePage = {\r\n            this.changeActivePage\r\n        }\r\n            {...this.props}/> \r\n        </>\r\n\r\n}\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): UsersContainerMapStatePropsType => {\r\nreturn {\r\n    users: getSearchingUsersSelector(state),\r\n    searchUsersText: getSearchUsersTextSelector(state),\r\n    currentPage: getCurrentPageSelector(state),\r\n    usersPerPageCount: getUsersPerPageCountSelector(state),\r\n    totalUsersCount: getTotalUsersCountSelector(state),\r\n    isLoading: getIsLoadingSelector(state),\r\n    followInProgress: getFollowInProgressSelector(state),\r\n    isAuth: getIsAuthSelector(state),\r\n    urlAIGeneratedImage: getUrlAIGeneratedImageSelector(state),\r\n    frends: getFrendsSelector(state)\r\n}\r\n\r\n}\r\n\r\nexport default compose(\r\n   connect<UsersContainerMapStatePropsType, UsersContainerMapDispatchPropstype, UsersConteinerOwnPropsType, AppStateType>(mapStateToProps, {\r\n    toFriends,\r\n    addToFrends,\r\n    fromFriends,\r\n    deleteFromFrends,\r\n    searchUsers,\r\n    changeCurrentPage,\r\n    nextPage,\r\n    previosPage,\r\n    firstPage,\r\n    lastPage,\r\n    changeUsersPerPage,\r\n    toggleFollowInProgress,\r\n    getUsers,\r\n    unFollow,\r\n    follow\r\n  })\r\n)(UsersContainer);\r\n"],"sourceRoot":""}