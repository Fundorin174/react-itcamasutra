{"version":3,"sources":["components/UsersPage/UsersContainer/Users/Users.module.css","components/UsersPage/UsersContainer/Users/User/User.module.css","components/UsersPage/UsersContainer/Users/Search/Search.module.css","components/common/Paginator/Paginator.module.css","components/UsersPage/UsersContainer/Users/User/User.jsx","components/UsersPage/UsersContainer/Users/Search/Search.jsx","components/common/Paginator/Pagination.jsx","components/UsersPage/UsersContainer/Users/Users.jsx","../node_modules/reselect/es/index.js","redux/usersSelectors.js","components/UsersPage/UsersContainer/UsersContainer.jsx"],"names":["module","exports","User","props","className","classes","user_wrapper","left_column","to","isAuth","id","img","src","smallPhotoSrc","Avatar","alt","followed","disabled","followInProgress","some","onClick","unFollow","btn","follow","isFrend","fromFriends","toFriends","right_column","row","fullName","status","Search","onChange","e","text","target","value","searchUsers","type","searchUsersText","placeholder","search_wrapper","Pagination","pages","j","currentPage","i","push","page_pagination","setFirstPage","page_navigation","setPreviosPage","previos_page","map","p","Math","ceil","totalUsersCount","usersPerPageCount","changeActivePage","page","active","key","setNextPage","next_page","lastPage","input","changeUserPerPageCount","Users","users_wrapper","users","user","name","photos","small","toggleFollowInProgress","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","next","length","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","undefined","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","getSearchUsersTextSelector","state","usersPage","getSearchingUsersSelector","filter","toLowerCase","includes","getCurrentPageSelector","getUsersPerPageCountSelector","getTotalUsersCountSelector","getIsLoadingSelector","isLoading","getFollowInProgressSelector","UsersContainer","numOfUsers","changeUsersPerPage","getUsers","pagesCount","changeCurrentPage","firstPage","previosPage","nextPage","this","Preloader","React","Component","compose","connect","getIsAuthSelector"],"mappings":"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","file":"static/js/3.adbad895.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_pagination\":\"Users_page_pagination__7oDMp\",\"page_navigation\":\"Users_page_navigation__2udfm\",\"lastPage\":\"Users_lastPage__1xo2o\",\"page\":\"Users_page__14oS-\",\"next_page\":\"Users_next_page__3IFAU\",\"previos_page\":\"Users_previos_page__2Qt2Q\",\"active\":\"Users_active__3tsoj\",\"input\":\"Users_input__2CREt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_wrapper\":\"User_user_wrapper__23eJb\",\"left_column\":\"User_left_column__2Ibuv\",\"btn\":\"User_btn__3uDYT\",\"img\":\"User_img__34K-y\",\"right_column\":\"User_right_column__345ey\",\"row\":\"User_row__1050E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search_wrapper\":\"Search_search_wrapper__3nXuD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page_pagination\":\"Paginator_page_pagination__2uusd\",\"page_navigation\":\"Paginator_page_navigation___DufM\",\"lastPage\":\"Paginator_lastPage__2FPZj\",\"page\":\"Paginator_page__kb82Q\",\"next_page\":\"Paginator_next_page__14tiy\",\"previos_page\":\"Paginator_previos_page__1CTlm\",\"active\":\"Paginator_active__3RE7-\",\"input\":\"Paginator_input__M3wLf\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Avatar from './../../../../../../src/img/avatar.png';\nimport classes from './User.module.css';\nconst User = (props) => {\n    return (\n        <div className = {classes.user_wrapper}>\n            <div className={classes.left_column}>\n              <NavLink to={props.isAuth ? '/profile/' + props.id : '/login'}>\n              <img\n                  className={classes.img}\n                  src={ props.smallPhotoSrc != null ? props.smallPhotoSrc : Avatar}\n                  alt={\"avatar\"}/>\n              </NavLink>\n               {\n                   props.followed ? \n              <button disabled={props.followInProgress.some(id => id === props.id)} onClick = {() => {props.unFollow(props.id)}}\n                   className = {classes.btn}> Отписаться </button> \n                   : \n              <button disabled={props.followInProgress.some(id => id === props.id)} onClick = {() => {props.follow(props.id)}} className={classes.btn}>Подписаться</button>\n               }\n               {\n                    props.isFrend ?\n                   <button onClick = {() => {props.fromFriends (props.id)}} className={classes.btn}>Убрать из друзей </button> :\n                   <button onClick = {() => { props.toFriends (props.id)}} className={classes.btn}>Добавить в друзья </button>\n                }  \n               \n            </div>\n            <div className={classes.right_column}>\n                <div className={classes.row}>\n                    <NavLink to={props.isAuth ?'/profile/' + props.id : '/login'}>\n                    <h4>{props.fullName}</h4>\n                    </NavLink>\n                    <p>Какая то страна</p>\n                </div>\n                <div className={classes.row}>\n                    <p>{props.status}</p>\n                    <p>Какой то город</p>\n                </div>\n            </div>\n\n\n        \n       </div>\n    );\n}\n\nexport default User;","import React from \"react\";\nimport classes from \"./Search.module.css\";\n\nconst Search = props => {\n  let searchUsers = e => {\n    let text = e.target.value;\n    props.searchUsers(text);\n  };\n\n  return (\n    <div>\n      <input\n        onChange={searchUsers}\n        type=\"text\"\n        value={props.searchUsersText}\n        placeholder=\"Поиск друзей\"\n        className={classes.search_wrapper}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport classes from './Paginator.module.css';\n\nconst Pagination = (props) => {\n    let pages = [];\n    let j = props.currentPage;\n    for (let i = props.currentPage; i < j + 5; i++) {\n        pages.push(i);\n    }\n    return (\n            <div className={classes.page_pagination}>\n                <span onClick={props.setFirstPage} className={classes.page_navigation}>Первая страница</span>\n                <span onClick={props.setPreviosPage} className={classes.previos_page}>&laquo;</span>\n                {\n                    pages.map(p => {\n                        if ((Math.ceil(props.totalUsersCount / props.usersPerPageCount) - p) > -1) {\n                            return <span\n                                onClick={() => {\n                                    props.changeActivePage(p)\n                                }}\n                                className={props.currentPage === p\n                                    ? `${classes.page} ${classes.active}`\n                                    : `${classes.page}`}\n                                key={p}>{p}</span>\n                        } else {return  null}\n                    })\n                }\n                <span onClick={props.setNextPage} className={classes.next_page}>&raquo;</span>\n                <span\n                    onClick={props.lastPage}\n                    className={`${classes.page_navigation} ${classes.lastPage}`}>Последняя страница</span>\n                <span>\n                    Пользователей на странице:\n                    <input\n                        className={classes.input}\n                        type=\"number\"\n                        value={props.usersPerPageCount}\n                        onChange={props.changeUserPerPageCount}/>\n\n                </span>\n            </div>\n    )\n\n}\n\nexport default Pagination\n","import React from 'react';\nimport classes from './Users.module.css';\nimport User from './User/User';\nimport Search from './Search/Search';\nimport Pagination from \"../../../common/Paginator/Pagination\";\n\nconst Users = (props) => {\n    let pages = [];\n    let j = props.currentPage;\n    for (let i = props.currentPage; i < j + 5; i++) {\n        pages.push(i);\n    }\n    return (\n        <div>\n            <div className={classes.search_wrapper}>\n                <Search searchUsers={props.searchUsers} />\n            </div>\n            <Pagination\n              currentPage = {\n               props.currentPage\n              }\n              setFirstPage = {\n                props.setFirstPage\n              }\n              setPreviosPage = {\n                props.setPreviosPage\n              }\n              setNextPage = {\n                props.setNextPage\n              }\n              lastPage = {\n                props.lastPage\n              }\n              totalUsersCount = {\n                props.totalUsersCount\n              }\n              usersPerPageCount = {\n                props.usersPerPageCount\n              }\n              changeUserPerPageCount = {\n                props.changeUserPerPageCount\n              }\n              changeActivePage = {\n                props.changeActivePage\n              }\n            />\n            <div className={classes.users_wrapper}>\n                {\n                    props\n                        .users\n                        .map(user => {\n                                return <User\n                                    key={user.id}\n                                    id={user.id}\n                                    fullName={user.name}\n                                    followed={user.followed}\n                                    smallPhotoSrc={user.photos.small}\n                                    status={user.status}\n                                    isFrend={user.isFrend}\n                                    isAuth = {props.isAuth}\n                                    follow={props.follow}\n                                    unFollow={props.unFollow}\n                                    toFriends={props.toFriends}\n                                    fromFriends={props.fromFriends}\n                                  toggleFollowInProgress={props.toggleFollowInProgress}\n                                  followInProgress = {props.followInProgress}/>\n\n                        })\n                }\n            </div>\n        </div>\n    )\n\n}\n\nexport default Users\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import { createSelector } from 'reselect';\r\n\r\nexport const getUsersSelector = (state) => {\r\n  return state.usersPage.users;\r\n}\r\n\r\nexport const getSearchUsersTextSelector = (state) => {\r\n  return state.usersPage.searchUsersText;\r\n}\r\n\r\n\r\nexport const getSearchingUsersSelector = createSelector(getSearchUsersTextSelector, getUsersSelector, (searchUsersText, users) => {\r\n  let filteredUsers = users ? users.filter( user => (`${user.name}`.toLowerCase().includes(searchUsersText.toLowerCase()))) : null;\r\n  return filteredUsers;\r\n})\r\n\r\n\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getUsersPerPageCountSelector = (state) => {\r\n  return state.usersPage.usersPerPageCount\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getIsLoadingSelector = (state) => {\r\n  return state.usersPage.isLoading\r\n}\r\n\r\nexport const getFollowInProgressSelector = (state) => {\r\n  return state.usersPage.followInProgress\r\n}\r\n\r\n\r\n","import React from 'react';\nimport {\n  changeCurrentPage,\n  changeUsersPerPage,\n  firstPage,\n  follow,\n  fromFriends,\n  getUsers,\n  lastPage,\n  nextPage,\n  previosPage,\n  searchUsers,\n  toFriends,\n  toggleFollowInProgress,\n  unFollow\n} from \"../../../redux/userReduser\";\nimport {connect} from 'react-redux';\nimport Users from './Users/Users';\nimport Preloader from './../../common/Preloader/Preloader'\nimport {compose} from 'redux';\nimport {getIsAuthSelector} from \"../../../redux/authSelectors\";\nimport {\n  getCurrentPageSelector,\n  getFollowInProgressSelector,\n  getIsLoadingSelector,\n  getSearchingUsersSelector,\n  getSearchUsersTextSelector,\n  getTotalUsersCountSelector,\n  getUsersPerPageCountSelector\n} from \"../../../redux/usersSelectors\";\n\n\nclass UsersContainer extends React.Component {\n\ncomponentDidMount() {\n    this\n        .props\n        .getUsers(this.props.currentPage, this.props.usersPerPageCount);\n}\n\nchangeUserPerPageCount = (e) => {\n    let numOfUsers = e.target.value;\n  (numOfUsers > 100) && (numOfUsers = 100) ;\n    this\n        .props\n        .changeUsersPerPage(numOfUsers);\n    this\n        .props\n        .getUsers(this.props.currentPage, numOfUsers);\n}\n\nlastPage = () => {\n    let pagesCount = Math.ceil(\n        this.props.totalUsersCount / this.props.usersPerPageCount\n    )\n\n    this\n        .props\n        .lastPage(pagesCount);\n    this\n        .props\n        .changeCurrentPage(pagesCount);\n    this\n        .props\n        .getUsers(pagesCount, this.props.usersPerPageCount);\n}\n\nsetFirstPage = () => {\n    this\n        .props\n        .firstPage();\n    this\n        .props\n        .getUsers(1, this.props.usersPerPageCount);\n}\n\nsetPreviosPage = () => {\n    if (this.props.currentPage > 1) {\n        this\n            .props\n            .previosPage();\n        this\n            .props\n            .getUsers(this.props.currentPage - 1, this.props.usersPerPageCount);\n    }\n\n}\n\nsetNextPage = () => {\n    let pagesCount = Math.ceil(\n        this.props.totalUsersCount / this.props.usersPerPageCount\n    )\n    if (this.props.currentPage < pagesCount) {\n        this\n            .props\n            .nextPage();\n        this\n            .props\n            .getUsers(this.props.currentPage + 1, this.props.usersPerPageCount);\n\n    }\n\n}\n\nchangeActivePage = (p) => {\n    this\n        .props\n        .changeCurrentPage(p);\n    this\n        .props\n        .getUsers(p, this.props.usersPerPageCount);\n}\n\n    render() {\n\n        return <> {\n            this.props.isLoading\n                ? <Preloader />\n                : null\n        }\n        <Users\n          isAuth = {this.props.isAuth}\n          currentPage = {\n            this.props.currentPage\n        }\n        searchUsers = {\n            this.props.searchUsers\n        }\n        searchUsersText = {\n            this.props.searchUsersText\n        }\n        setFirstPage = {\n            this.setFirstPage\n        }\n        setPreviosPage = {\n            this.setPreviosPage\n        }\n        setNextPage = {\n            this.setNextPage\n        }\n        lastPage = {\n            this.lastPage\n        }\n        totalUsersCount = {\n            this.props.totalUsersCount\n        }\n        usersPerPageCount = {\n            this.props.usersPerPageCount\n        }\n        changeUserPerPageCount = {\n            this.changeUserPerPageCount\n        }\n        changeActivePage = {\n            this.changeActivePage\n        }\n        users = {\n            this.props.users\n        }\n        follow = {\n            this.props.follow\n        }\n        unFollow = {\n            this.props.unFollow\n        }\n        toFriends = {\n            this.props.toFriends\n        }\n        fromFriends = {\n            this.props.fromFriends\n        }\n            toggleFollowInProgress = {\n              this.props.toggleFollowInProgress\n        }\n        followInProgress = {\n          this.props.followInProgress\n        }\n        /> \n        </ >\n\n}\n\n}\n\nlet mapStateToProps = (state) => {\nreturn {\n    users: getSearchingUsersSelector(state),\n    searchUsersText: getSearchUsersTextSelector(state),\n    currentPage: getCurrentPageSelector(state),\n    usersPerPageCount: getUsersPerPageCountSelector(state),\n    totalUsersCount: getTotalUsersCountSelector(state),\n    isLoading: getIsLoadingSelector(state),\n  followInProgress: getFollowInProgressSelector(state),\n  isAuth: getIsAuthSelector(state)\n}\n\n}\n\nexport default compose(\n   connect(mapStateToProps, {\n    toFriends,\n    fromFriends,\n    searchUsers,\n    changeCurrentPage,\n    nextPage,\n    previosPage,\n    firstPage,\n    lastPage,\n    changeUsersPerPage,\n    toggleFollowInProgress,\n    getUsers,\n    unFollow,\n    follow\n  })\n)(UsersContainer);\n"],"sourceRoot":""}