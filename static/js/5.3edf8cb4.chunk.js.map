{"version":3,"sources":["components/LoginPage/Login.module.css","components/LoginPage/LoginForm.jsx","components/LoginPage/Login.tsx"],"names":["module","exports","LoginForm","props","onSubmit","handleSubmit","className","classes","form","createTextField","textField","InputFieldCreator","required","isCaptchaNeeded","src","capchaUrl","alt","error","btn","reduxForm","connect","state","isAuth","getIsAuthSelector","getCapchaUrlSelector","getIsCaptchaNeededSelector","login","to","title","values","email","password","rememberMe","captcha"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oBAAoB,UAAY,yBAAyB,MAAQ,qBAAqB,IAAM,mBAAmB,gBAAkB,+BAA+B,iBAAmB,kC,+GCOrOC,EAAY,SAACC,GAGb,OACE,oCACE,0BACEC,SAAUD,EAAME,aAChBC,UAAWC,IAAQC,MASlBC,YAAgBF,IAAQG,UAAW,QAASC,IAAmB,QAAS,SAAU,CAACC,MACnFH,YAAgBF,IAAQG,UAAW,WAAYC,IAAmB,WAAY,uCAAU,CAACC,MAC1F,6BACCH,YAAgB,GAAI,aAAc,QAAS,WAAY,KAAM,IAC7D,kHAGCN,EAAMU,iBAAmB,6BACvB,mKACA,yBAAKC,IAAKX,EAAMY,UAAWC,IAAI,YAC9BP,YAAgBF,IAAQG,UAAW,UAAWC,IAAmB,QAAS,YAG9ER,EAAMc,MACL,yBAAKX,UAAWC,IAAQU,OACrBd,EAAMc,OAGT,KAEF,4BAAQX,UAAWC,IAAQW,KAA3B,6DAYKhB,EAJfA,EAAYiB,YAAU,CACpBX,KAAM,aADIW,CAETjB,G,gCCKYkB,uBATO,SAACC,GACrB,MAAO,CACLC,OAAQC,YAAkBF,GAC1BN,UAAWS,YAAqBH,GAChCR,gBAAiBY,YAA2BJ,MAK4E,CAAEK,WAA/GN,EAjCyB,SAACjB,GAYvC,OAAIA,EAAMmB,OACG,kBAAC,IAAD,CAAUK,GAAI,aAGlB,yBAAKrB,UAAaC,IAAQmB,OAC/B,wBAAIpB,UAAaC,IAAQqB,OAAzB,uHACA,kBAAC,EAAD,CAAWxB,SAfA,SAACyB,GACd,IAAIC,EAAQD,EAAOC,MACjBC,EAAWF,EAAOE,SAClBC,EAAaH,EAAOG,WACpBC,EAAUJ,EAAOI,QACnB9B,EAAMuB,MAAMI,EAAOC,EAAUC,EAAYC,IAURlB,UAAWZ,EAAMY,UAAWF,gBAAiBV,EAAMU","file":"static/js/5.3edf8cb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Login_title__JfQ4C\",\"form\":\"Login_form__1wxXt\",\"textField\":\"Login_textField__1MIn2\",\"error\":\"Login_error__1f4mj\",\"btn\":\"Login_btn__2lSp1\",\"ProfileDataform\":\"Login_ProfileDataform__1TKNm\",\"textFieldProfile\":\"Login_textFieldProfile__2Xy2M\"};","import React from 'react';\nimport classes from './Login.module.css';\nimport {reduxForm} from 'redux-form';\nimport {InputFieldCreator} from \"../common/BlockContainer\";\nimport {required} from \"../common/validators\";\nimport {createTextField} from \"../common/helpFunctions\";\n\n\nlet LoginForm = (props) => {\n\n\n    return (\n      <>\n        <form\n          onSubmit={props.handleSubmit}\n          className={classes.form}\n          >\n          {/* <Field\n            className={classes.textField}\n            name=\"name\"\n            component=\"input\"\n            type=\"text\"\n            placeholder=\"Имя\"\n          /> */}\n          {createTextField(classes.textField, \"email\", InputFieldCreator, \"input\", \"E-mail\", [required])}\n          {createTextField(classes.textField, \"password\", InputFieldCreator, \"password\", \"Пароль\", [required])}\n          <div>\n          {createTextField('', \"rememberMe\", 'input', \"checkbox\", null, [])}\n           <span>Запомнить меня</span>\n          </div>\n          {\n            props.isCaptchaNeeded && <div>\n              <span>Введите текст с картинки</span>\n              <img src={props.capchaUrl} alt=\"Captcha\" />\n              {createTextField(classes.textField, \"captcha\", InputFieldCreator, \"input\", \"Captcha\")}\n            </div>\n          }\n          {props.error ?\n            <div className={classes.error}>\n              {props.error}\n            </div>\n            :\n            null\n          }\n          <button className={classes.btn}>\n            Отправить\n          </button>\n        </form>\n      </>\n    );\n}\n\nLoginForm = reduxForm({\n  form: 'LoginForm'\n})(LoginForm);\n\nexport default LoginForm;","import React from 'react';\nimport classes from './Login.module.css';\nimport LoginForm from './LoginForm';\nimport { connect } from 'react-redux';\nimport { login} from '../../redux/authReduser';\nimport {Redirect} from \"react-router-dom\";\nimport { getIsAuthSelector, getCapchaUrlSelector, getIsCaptchaNeededSelector} from \"../../redux/authSelectors\";\nimport { AppStateType } from '../../redux/reduxStore';\nimport { LoginValuesType } from '../../types/types';\n\ntype LoginMapStatePropsType = {\n  isAuth: boolean\n  capchaUrl: null | string\n  isCaptchaNeeded: boolean\n}\n\ntype LoginMapDispatchPropsType = {\n  login: (email: string, password: string, rememberMe: boolean, captcha: string | undefined) => void\n}\n\ntype LoginOwnPropsType = {\n  onSubmit: (values: LoginValuesType) => void\n}\n\ntype LoginPropsType = LoginMapStatePropsType & LoginMapDispatchPropsType & LoginOwnPropsType\n\nconst Login: React.FC<LoginPropsType> = (props) => {\n\n\n  let onSubmit = (values: LoginValuesType)  => {\n    let email = values.email,\n      password = values.password,\n      rememberMe = values.rememberMe,\n      captcha = values.captcha;\n    props.login(email, password, rememberMe, captcha);\n\n\n  };\n  if (props.isAuth) {\n        return <Redirect to={\"/profile\"}></Redirect>\n  }\n  else {\n    return <div className = {classes.login}>\n      <h1 className = {classes.title}>Страница авторизации</h1>\n      <LoginForm onSubmit={onSubmit} capchaUrl={props.capchaUrl} isCaptchaNeeded={props.isCaptchaNeeded}/>\n    </div>\n  }\n\n}\n\nlet mapStateToProps = (state: AppStateType): LoginMapStatePropsType => {\n  return {\n    isAuth: getIsAuthSelector(state),\n    capchaUrl: getCapchaUrlSelector(state),\n    isCaptchaNeeded: getIsCaptchaNeededSelector(state)\n  }\n\n}\n\nexport default connect<LoginMapStatePropsType, LoginMapDispatchPropsType, LoginOwnPropsType, AppStateType>(mapStateToProps, { login })(Login);\n"],"sourceRoot":""}